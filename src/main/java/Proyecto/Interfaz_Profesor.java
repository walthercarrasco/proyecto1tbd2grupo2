/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Proyecto;

import com.mongodb.client.MongoCursor;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.bson.Document;

/**
 *
 * @author emili
 */
public class Interfaz_Profesor extends javax.swing.JFrame {

    
    private String dniprofesor;
    /**
     * Creates new form Interfaz_Profesor
     */
    public Interfaz_Profesor(String dni) {
        this.dniprofesor = dni;
        initComponents();
        llenartabla();
    }
    
    private void llenartabla(){
        Document df = new Document("profesor_dni", dniprofesor);
        MongoCursor<Document> cursor = conn.practicas.find(df).iterator();
        ModeloTabla();
        DefaultTableModel model = (DefaultTableModel)TB_Alumnos.getModel();
        while(cursor.hasNext()){
            Document dc = cursor.next();
            String dnialumno = (String)dc.get("alumno_dni");
            Document df2 = new Document("dni",dnialumno);
            MongoCursor<Document> cursoralumno = conn.estudiantes.find(df2).iterator();
            df2 = cursoralumno.next();
            Object[] row = {
                false,dnialumno,df2.get("nombre"),df2.get("correo"),dc.get("tipo")
            };
            model.addRow(row);
        }
        TB_Alumnos.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JD_Tarifar = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        JS_Kilometraje = new javax.swing.JSpinner();
        JS_Horas = new javax.swing.JSpinner();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        LP_ScrollPane1 = new javax.swing.JScrollPane();
        TB_Alumnos = new javax.swing.JTable();
        BT_Aprobar = new javax.swing.JButton();
        BT_Tarifar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        JD_Tarifar.setResizable(false);
        JD_Tarifar.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel2.setText("Kilometros Recorridos");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, -1, -1));

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel3.setText("Tiempo de Practica (Horas)");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, -1, -1));
        jPanel2.add(JS_Kilometraje, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 50, 80, -1));
        jPanel2.add(JS_Horas, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 100, 80, -1));

        jButton1.setText("Registrar Practica");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton1MousePressed(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 200, 130, 40));

        JD_Tarifar.getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 510, 300));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1450, 830));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        LP_ScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 255)));

        TB_Alumnos.setBackground(new java.awt.Color(36, 41, 51));
        TB_Alumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "âœ“", "DNI", "Nombre", "Correo", "Licencia"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TB_Alumnos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        TB_Alumnos.setSelectionBackground(new java.awt.Color(12, 56, 85));
        TB_Alumnos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        TB_Alumnos.getTableHeader().setReorderingAllowed(false);
        TB_Alumnos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                TB_AlumnosMouseReleased(evt);
            }
        });
        LP_ScrollPane1.setViewportView(TB_Alumnos);
        if (TB_Alumnos.getColumnModel().getColumnCount() > 0) {
            TB_Alumnos.getColumnModel().getColumn(0).setResizable(false);
            TB_Alumnos.getColumnModel().getColumn(0).setPreferredWidth(50);
            TB_Alumnos.getColumnModel().getColumn(1).setResizable(false);
            TB_Alumnos.getColumnModel().getColumn(1).setPreferredWidth(150);
            TB_Alumnos.getColumnModel().getColumn(2).setResizable(false);
            TB_Alumnos.getColumnModel().getColumn(2).setPreferredWidth(250);
            TB_Alumnos.getColumnModel().getColumn(3).setResizable(false);
            TB_Alumnos.getColumnModel().getColumn(3).setPreferredWidth(200);
            TB_Alumnos.getColumnModel().getColumn(4).setResizable(false);
            TB_Alumnos.getColumnModel().getColumn(4).setPreferredWidth(150);
        }

        jPanel1.add(LP_ScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 1070, 640));

        BT_Aprobar.setBackground(new java.awt.Color(29, 91, 49));
        BT_Aprobar.setFont(new java.awt.Font("Microsoft JhengHei UI", 1, 12)); // NOI18N
        BT_Aprobar.setText("Calificar");
        BT_Aprobar.setBorderPainted(false);
        BT_Aprobar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BT_Aprobar.setEnabled(false);
        BT_Aprobar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BT_AprobarMousePressed(evt);
            }
        });
        BT_Aprobar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT_AprobarActionPerformed(evt);
            }
        });
        jPanel1.add(BT_Aprobar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 90, 260, 70));

        BT_Tarifar.setBackground(new java.awt.Color(153, 153, 0));
        BT_Tarifar.setFont(new java.awt.Font("Microsoft JhengHei UI", 1, 12)); // NOI18N
        BT_Tarifar.setText("Asignar Tiempo de Practica");
        BT_Tarifar.setBorderPainted(false);
        BT_Tarifar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BT_Tarifar.setEnabled(false);
        BT_Tarifar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BT_TarifarMousePressed(evt);
            }
        });
        BT_Tarifar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT_TarifarActionPerformed(evt);
            }
        });
        jPanel1.add(BT_Tarifar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 270, 260, 70));

        jLabel1.setBackground(new java.awt.Color(12, 56, 85));
        jLabel1.setFont(new java.awt.Font("Microsoft JhengHei UI", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Alumnos");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 255)));
        jLabel1.setOpaque(true);
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 1070, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1450, 830));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TB_AlumnosMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TB_AlumnosMouseReleased
        boolean Marcado = false;
        for (int i = 0; i < TB_Alumnos.getRowCount(); i++) {
            if (TB_Alumnos.getValueAt(i, 0) != null && (boolean) TB_Alumnos.getValueAt(i, 0) == true) {
                Marcado = true;
            }
        }
        if (Marcado == true) {
            BT_Aprobar.setEnabled(true);
            BT_Tarifar.setEnabled(true);
        } else {
            BT_Aprobar.setEnabled(false);
            BT_Tarifar.setEnabled(false);
        }
    }//GEN-LAST:event_TB_AlumnosMouseReleased

    private void BT_AprobarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BT_AprobarActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) TB_Alumnos.getModel();

        for (int i = 0; i < TB_Alumnos.getRowCount(); i++) {
            try {
                if ((boolean) modelo.getValueAt(i, 0) == true) {
                    modelo.setValueAt("Aprobado", i, 5);
                }
            } catch (Exception e) {
            }
        }

        TB_Alumnos.setModel(modelo);
    }//GEN-LAST:event_BT_AprobarActionPerformed

    private void BT_TarifarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BT_TarifarActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) TB_Alumnos.getModel();

        for (int i = 0; i < TB_Alumnos.getRowCount(); i++) {
            try {
                if ((boolean) modelo.getValueAt(i, 0) == true) {
                    modelo.setValueAt("Reprobado", i, 5);
                }
            } catch (Exception e) {
            }
        }

        TB_Alumnos.setModel(modelo);
    }//GEN-LAST:event_BT_TarifarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void BT_TarifarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BT_TarifarMousePressed
        Document df = new Document("profesor", dniprofesor);
        MongoCursor<Document> f = conn.vehiculos.find(df).iterator();
        if(BT_Tarifar.isEnabled() && f.hasNext()){
            JD_Tarifar.setModal(true);
            JD_Tarifar.pack();
            JD_Tarifar.setLocationRelativeTo(null);
            JD_Tarifar.setVisible(true);
        }
    }//GEN-LAST:event_BT_TarifarMousePressed

    private void jButton1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MousePressed
        DefaultTableModel model = (DefaultTableModel)TB_Alumnos.getModel();
        for (int i = 0; i < TB_Alumnos.getRowCount(); i++) {
            try {
                if ((boolean) model.getValueAt(i, 0) == true) {
                    Document df = new Document("profesor", dniprofesor);
                    MongoCursor<Document> f = conn.vehiculos.find(df).iterator();
                    Document encontrado = f.next();
                    int kilometraje = (int)encontrado.get("kilometraje");
                    conn.vehiculos.updateMany(df, new Document("$set", new Document("kilometraje", kilometraje+(int)JS_Kilometraje.getValue())));
                    String dnialumno = (String)model.getValueAt(i, 1);
                    double tarifa = (double)encontrado.get("tarifa");
                    
                    Document dc = new Document();
                    dc.append("alumno_dni", dnialumno);
                    dc.append("descripcion", "Practica de " + (int)JS_Horas.getValue() + " para Licencia");
                    dc.append("costo", (float)(((int)JS_Horas.getValue())*tarifa));
                    dc.append("pagado", false);
                    conn.pagos.insertOne(dc);
                    JS_Horas.setValue(0);
                    JS_Kilometraje.setValue(0);
                    JOptionPane.showMessageDialog(JD_Tarifar, "Tarifa Puesta");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }            
        }
    }//GEN-LAST:event_jButton1MousePressed

    private void BT_AprobarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BT_AprobarMousePressed
        DefaultTableModel model = (DefaultTableModel)TB_Alumnos.getModel();
        boolean si = false;
        for(int i = 0; i < model.getRowCount(); i++){
            if((boolean)model.getValueAt(i, 0)) 
                si = true;
        }
        if(si){
            String input = JOptionPane.showInputDialog("Ingrese la calificacion:");
            try{
                double cal = Double.parseDouble(input);
                if(cal >= 60){
                    for(int i = 0; i < model.getRowCount(); i++){
                        if((boolean)model.getValueAt(i, 0)){
                            String dnialumno = (String)model.getValueAt(i, 1);
                            String tip = (String)model.getValueAt(i, 4);
                            ArrayList<Document> coso = (ArrayList<Document>)(((MongoCursor<Document>)conn.estudiantes.find(new Document("dni", dnialumno)).iterator()).next().get("licencias"));
                            Document du = new Document();
                            du.append("tipo", tip);
                            du.append("fecha", new Date().toString());
                            du.append("calificacion", cal);
                            coso.add(du);
                            conn.estudiantes.updateMany(new Document("dni", dnialumno), new Document("$set", new Document("licencias", coso)));
                            du = new Document();
                            du.append("alumno_dni", dnialumno);
                            du.append("profesor_dni", dniprofesor);
                            conn.practicas.deleteOne(du);
                        }
                    }                  
                }else{
                    for(int i = 0; i < model.getRowCount(); i++){
                        if((boolean)model.getValueAt(i, 0)){
                            String dnialumno = (String)model.getValueAt(i, 1);
                            Document du = new Document();
                            du.append("alumno_dni", dnialumno);
                            du.append("profesor_dni", dniprofesor);
                            conn.practicas.deleteOne(du);
                        }
                    }                   
                }
               llenartabla();
            }catch(Exception e){
                e.printStackTrace();
            }            
        }
    }//GEN-LAST:event_BT_AprobarMousePressed

    private void ModeloTabla(){
        TB_Alumnos.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                    "âœ“", "DNI", "Nombre", "Correo", "Licencia"
                }
            ) {
                Class[] types = new Class [] {
                    java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
                };
                boolean[] canEdit = new boolean [] {
                    true, false, false, false, false
                };

                public Class getColumnClass(int columnIndex) {
                    return types [columnIndex];
                }

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BT_Aprobar;
    private javax.swing.JButton BT_Tarifar;
    private javax.swing.JDialog JD_Tarifar;
    private javax.swing.JSpinner JS_Horas;
    private javax.swing.JSpinner JS_Kilometraje;
    private javax.swing.JScrollPane LP_ScrollPane1;
    private javax.swing.JTable TB_Alumnos;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
